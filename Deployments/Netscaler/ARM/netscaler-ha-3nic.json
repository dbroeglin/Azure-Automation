{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "12.1.0.0",
	"parameters": {
		"adminUsername": {
			"defaultValue": "nsoperator",
			"type": "string",
			"metadata": {
				"description": "Username for the Netscaler appliance."
			}
		},
		"adminPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Password for the Virtual Machines."
			}
		},
		"vmSize": {
			"defaultValue": "Standard_DS3_v2",
			"type": "string",
			"allowedValues": [
				"Standard_DS3_v2",
				"Standard_DS4_v2"
			],
			"metadata": {
				"description": "Size of Azure Virtual Machine."
			}
		},
		"vmSku": {
			"defaultValue": "netscalerbyol",
			"type": "string",
			"allowedValues": ["netscalerbyol",
				"netscaler10standard",
				"netscaler10enterprise",
				"netscaler10platinum",
				"netscaler200standard",
				"netscaler200enterprise",
				"netscaler200platinum",
				"netscaler1000standard",
				"netscaler1000enterprise",
				"netscaler1000platinum",
				"netscaler3000standard",
				"netscaler3000enterprise",
				"netscaler3000platinum"
			],

			"metadata": {
				"description": "SKU of NetScaler Image."
			}
		},
		"vnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of Virtual Network"
			}
		},
		"vnetResourceGroup": {
			"type": "string",
			"metadata": {
				"description": "Resource Group name of existing Virtual Network. Leave empty if Resource Group is same as current deployment."
			}
		},
		"vnetNewOrExisting": {
			"defaultValue": "new",
			"allowedValues": [
				"new",
				"existing"
			],
			"type": "string"
		},
		"managementSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of Management Subnet. Enter existing subnet name if opting for existing Virtual Network"
			}
		},
		"frontendSubnetName": {
			"defaultValue": "subnet_client",
			"type": "string",
			"metadata": {
				"description": "Name of Client Side subnet. Enter existing subnet name if opting for existing Virtual Network"
			}
		},
		"backendSubnetName": {
			"defaultValue": "subnet_server",
			"type": "string",
			"metadata": {
				"description": "Name of Server Side subnet. Enter existing subnet name if opting for existing Virtual Network"
			}
		},
		"managementAddressPrefix": {
			"defaultValue": "10.11.0.0/24",
			"type": "string",
			"metadata": {
				"description": "Value of Management subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
			}
		},
		"frontendAddressPrefix": {
			"defaultValue": "10.11.1.0/24",
			"type": "string",
			"metadata": {
				"description": "Value of Client side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
			}
		},
		"backendAddressPrefix": {
			"defaultValue": "10.11.2.0/24",
			"type": "string",
			"metadata": {
				"description": "Value of Server Side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
			}
		},
		"lbFrontendIpAddress": {
			"type": "string",
			"metadata": {
				"description": "Loadbalancer front end IP address (static)"				
			}
		},
		"backendIPAddresses": {
			"type": "array",
			"metadata": {
				"description": "Netscaler backend IP addresses"				
			}
		}
	},
	"variables": {
		"vmN": "ns-vpx",
		"nicN": "ns-vpx-nic",
		"nsgN": "ns-vpx-nic-nsg",
		"lbN": "alb",
		"bePoolN": "backendPool",
		"probeN": "nsProbe",
		"ipConfN": "ipConfig-11",
		"avsN": "avl-set",
		"saN": "[concat('vpxha', uniqueString(resourceGroup().id))]",
		"vnetRg": "[if(equals(parameters('vnetResourceGroup'), ''), resourceGroup().name,parameters('vnetResourceGroup'))]",
		"vnetId": "[resourceId(variables('vnetRg'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
		"managementSubnetRef-01": "[concat(variables('vnetId'), '/subnets/', parameters('managementSubnetName'))]",
		"frontendSubnetRef-11": "[concat(variables('vnetId'), '/subnets/', parameters('frontendSubnetName'))]",
		"backendSubnetRef-12": "[concat(variables('vnetId'), '/subnets/', parameters('backendSubnetName'))]",
		"lbId": "[resourceId( 'Microsoft.Network/loadBalancers', variables('lbN'))]",
		"bePoolId": "[concat(variables('lbId'),'/backendAddressPools/', variables('bePoolN'))]",
		"probeId": "[concat(variables('lbId'),'/probes/', variables('probeN'))]",
		"ipConfId": "[concat(variables('lbId'),'/frontendIpConfigurations/', variables('ipConfN'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('avsN')]",
			"apiVersion": "2017-12-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"platformFaultDomainCount": 3,
				"platformUpdateDomainCount": 20
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmN'), copyIndex())]",
			"apiVersion": "2017-12-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "vmcopy",
				"count": 2
			},
			"plan": {
				"name": "[parameters('vmSku')]",
				"publisher": "citrix",
				"product": "netscalervpx-121"
			},
			"properties": {
				"osProfile": {
					"computerName": "[concat(variables('vmN'), copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]",
					"customData": "[base64(concat('{\"username\":\"', parameters('adminUsername'), '\",\"ha_config\":{\"peer_node\":\"', reference(concat(variables('nicN'), sub(1, copyIndex()), '-01')).ipConfigurations[0].properties.privateIPAddress ,'\"},\"vpx_config\":{\"snip_11\":\"', reference(concat(variables('nicN'), copyIndex(), '-11')).ipConfigurations[0].properties.privateIPAddress ,'\",\"pvt_ip_12\":\"', reference(concat(variables('nicN'), copyIndex(), '-12')).ipConfigurations[0].properties.privateIPAddress ,'\",\"subnet_11\":\"', reference(variables('frontendSubnetRef-11'), '2017-10-01', 'Full').properties.addressPrefix ,'\",\"subnet_12\":\"', reference(variables('backendSubnetRef-12'), '2017-10-01', 'Full').properties.addressPrefix, '\"}}'))]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "citrix",
						"offer": "netscalervpx-121",
						"sku": "[parameters('vmSku')]",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "fromImage",
						"vhd": {
							"uri": "[concat(reference(variables('saN'), '2017-10-01').primaryEndpoints.blob, 'vhds/osdisk', copyIndex(), '.vhd')]"
						},
						"name": "[concat(variables('vmN'), copyIndex())]"
					},
					"dataDisks": []
				},
				"networkProfile": {
					"networkInterfaces": [{
							"id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), copyIndex(), '-01'))]",
							"properties": {
								"primary": true
							}
						}, {
							"id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), copyIndex(), '-11'))]",
							"properties": {
								"primary": false
							}
						}, {
							"id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), copyIndex(), '-12'))]",
							"properties": {
								"primary": false
							}
						}
					]
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsN'))]"
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[reference(resourceId( 'Microsoft.Storage/storageAccounts', variables('saN')), '2017-10-01').primaryEndpoints['blob']]"
					}
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), copyIndex(), '-01')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), sub(1,copyIndex()), '-01')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), copyIndex(), '-11')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), sub(1,copyIndex()), '-11')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), copyIndex(), '-12')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), sub(1,copyIndex()), '-12')]",
				"[concat('Microsoft.Compute/availabilitySets/', variables('avsN'))]",
				"[concat('Microsoft.Storage/storageAccounts/', variables('saN'))]"
			]
		},
        {
            "type": "microsoft.devtestlab/schedules",
			"name": "[concat('shutdown-computevm-', variables('vmN'), copyIndex())]",
			"copy": {
				"name": "vmcopy",
				"count": 2
			},			
            "apiVersion": "2016-05-15",
            "location": "westeurope",
            "scale": null,
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "2200"
                },
                "timeZoneId": "Central European Standard Time",
                "notificationSettings": {
                    "status": "Enabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmN'), copyIndex()))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmN'), copyIndex()))]"
            ]
        },
	 	{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('saN')]",
			"apiVersion": "2017-10-01",
			"kind": "Storage",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard_LRS"
			},
			"properties": {}
		},
		{
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('lbN')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"frontendIPConfigurations": [{
						"name": "[variables('ipConfN')]",
						"properties": {
                            "privateIPAddress": "[parameters('lbFrontendIpAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('frontendSubnetRef-11')]"
                            }
						}
					}
				],
				"backendAddressPools": [{
						"name": "[variables('bePoolN')]"
					}
				],
				"probes": [{
						"name": "[variables('probeN')]",
						"properties": {
							"protocol": "tcp",
							"port": 80,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				],
				"loadBalancingRules": [{
						"name": "lbRule1",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('ipConfId')]"
							},
							"frontendPort": 80,
							"backendPort": 80,
							"enableFloatingIP": false,
							"idleTimeoutInMinutes": 4,
							"protocol": "Tcp",
							"loadDistribution": "Default",
							"backendAddressPool": {
								"id": "[variables('bePoolId')]"
							},
							"probe": {
								"id": "[variables('probeId')]"
							}
						}
					}
				]
			},
			"dependsOn": [
			]
		}, {
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[parameters('vnetName')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[parameters('managementAddressPrefix')]",
						"[parameters('frontendAddressPrefix')]",
						"[parameters('backendAddressPrefix')]"
					]
				},
				"subnets": [{
						"name": "[parameters('managementSubnetName')]",
						"properties": {
							"addressPrefix": "[parameters('managementAddressPrefix')]"
						}
					}, {
						"name": "[parameters('frontendSubnetName')]",
						"properties": {
							"addressPrefix": "[parameters('frontendAddressPrefix')]"
						}
					}, {
						"name": "[parameters('backendSubnetName')]",
						"properties": {
							"addressPrefix": "[parameters('backendAddressPrefix')]"
						}
					}
				]
			},
			"condition": "[equals(parameters('vnetNewOrExisting'),'new')]"
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('nicN'), copyIndex(), '-01')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "niccopy-01",
				"count": 2
			},
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[variables('managementSubnetRef-01')]"
							},
							"privateIPAllocationMethod": "Dynamic",
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), copyIndex(), '-01'))]"
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), copyIndex(), '-01')]"
			]
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('nicN'), copyIndex(), '-11')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "niccopy-11",
				"count": 2
			},
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[variables('frontendSubnetRef-11')]"
							},
							"privateIPAllocationMethod": "Dynamic",
							"loadBalancerBackendAddressPools": [{
									"id": "[variables('bePoolId')]"
								}
							]
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), copyIndex(), '-11'))]"
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), copyIndex(), '-11')]",
				"[concat('Microsoft.Network/loadBalancers/', variables('lbN'))]"
			]
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('nicN'), copyIndex(), '-12')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "niccopy-12",
				"count": 2
			},
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[variables('backendSubnetRef-12')]"
							},
							"privateIPAddress": "[parameters('backendIPAddresses')[copyIndex()]]",
                            "privateIPAllocationMethod": "Static"
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), copyIndex(), '-12'))]"
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), copyIndex(), '-12')]"
			]
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(variables('nsgN'), copyIndex(), '-01')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "nsgcopy-01",
				"count": 2
			},
			"properties": {
				"securityRules": [{
						"name": "default-allow-ssh",
						"properties": {
							"priority": 1000,
							"sourceAddressPrefix": "*",
							"protocol": "TCP",
							"destinationPortRange": "22",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}, {
						"name": "autoscale-daemon",
						"properties": {
							"priority": 1001,
							"sourceAddressPrefix": "*",
							"protocol": "TCP",
							"destinationPortRange": "9001",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		}, {
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(variables('nsgN'), copyIndex(), '-11')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "nsgcopy-11",
				"count": 2
			},
			"properties": {
				"securityRules": [{
						"name": "default-allow-ssh",
						"properties": {
							"priority": 1000,
							"sourceAddressPrefix": "*",
							"protocol": "TCP",
							"destinationPortRange": "22",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		}, {
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(variables('nsgN'), copyIndex(), '-12')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "nsgcopy-12",
				"count": 2
			},
			"properties": {
				"securityRules": [{
						"name": "default-allow-ssh",
						"properties": {
							"priority": 1000,
							"sourceAddressPrefix": "*",
							"protocol": "TCP",
							"destinationPortRange": "22",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		}
	]
}
